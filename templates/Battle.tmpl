{{ define "Battle" }}
  {{ template "Header" .Title }}
    {{ template "Menu" .User }}
    <div class="container">
      <div class="battle-information">
        <span class="battle-host"><a class="battle-url" href="/user/{{.Battle.UserID}}">{{.Battle.Host}}</a> - {{.Battle.Type}} Battle | {{if eq "entry" .Battle.Status}}<span style="color: #ff5800">Open</span>{{else if eq "voting" .Battle.Status}}<span style="color: #1E19FF">Voting</span>{{else}}Finished{{end}}</span>
        <nav class="battle-title">
          <div class="nav-left">
          <h1>{{.Battle.Title}}</h1>
          <span class="battle-deadline">{{if eq "entry" .Battle.Status}}{{trimPrefix "Open - " .Battle.StatusDisplay}}{{else if eq "voting" .Battle.Status}}{{trimPrefix "Voting - " .Battle.StatusDisplay}}{{else}}{{.Battle.StatusDisplay}}{{end}}</span>
          </div>
          <ul class="nav-links">
            {{if .IsOwner}}
              <li class="nav-item nav-secondary"><a class="modal-trigger" href="#deleteBattle">Delete</a></li>
              {{if eq "complete" .Battle.Status}}
                <li class="nav-item nav-disabled"><a>CLOSED</a></li>
              {{else}}              
                <li class="nav-item nav-cta"><a id="edit-button" href="/battle/{{.Battle.ID}}/update/">EDIT</a></li>
              {{end}}
            {{else}}
              {{if .Battle.Attachment}}
              <li class="nav-item nav-secondary"><a href="{{.Battle.Attachment}}">FILES</a></li>
              {{end}}
              {{if eq "entry" .Battle.Status}}
                {{ if .EnteredBattle }}
                <li class="nav-item nav-secondary"><a href="/battle/{{.Battle.ID}}/feedback">FEEDBACK</a></li>
                <li class="nav-item nav-cta"><a href="/beat/{{.Battle.ID}}/update">UPDATE</a></li>
                {{ else }}
                {{ if .CanEnter }}
                <li class="nav-item nav-cta"><a href="/beat/{{.Battle.ID}}/submit">SUBMIT</a></li>
                {{ else }}
                <li class="nav-item nav-disabled"><a>NOT IN GROUP</a></li>
                {{ end }}
                {{ end }}
              {{ else }}
              {{if .EnteredBattle}}<li class="nav-item nav-secondary"><a href="/battle/{{.Battle.ID}}/feedback">FEEDBACK</a></li>{{ end }}
              <li class="nav-item nav-disabled"><a>CLOSED</a></li>
              {{end}}
            {{end}}
          </ul>
        </nav>
        <h3>Rules</h3>
        <div class="battle-rules">{{.Battle.RulesHTML}}</div>
        {{if .Battle.Tags }}
        <div class="chips battle-chips">{{range .Battle.Tags}}<a href="/battles/{{.Value}}" class="chip">{{.Value}}</a>{{end}}</div>
        {{end}}
      </div>
      <zing-grid caption='{{ if .EntryPosition }}<span style="color: #ff5800">{{.EntryPosition}}</span>/{{end}}{{.Battle.Entries}} Entries {{if eq "complete" .Battle.Status}}{{else}}| <span class="votes-remaining">{{.VotesRemaining}}</span> Vote{{if eq .VotesRemaining 1}}{{else}}s{{end}} Remaining{{end}}' layout-controls="disabled" sort {{if eq "complete" .Battle.Status}}search{{end}} pager page-size="25" page-size-options="10, 25, 50" layout="row" viewport-stop>
        <zg-colgroup>
          {{if eq "complete" .Battle.Status}}
          <zg-column cell-class="zing-left" header="Artist" index="artist">
            <a class="battle-url" href="/user/[[record.user_id]]">[[record.artist]]</a>
          </zg-column>
          <zg-column cell-class="zing-left" header="Track" index="url"></zg-column>
          {{ else }}
          <zg-column width="85px" cell-class="zing-left" type="row-number" header="Entry #"></zg-column>
          <zg-column cell-class="zing-left" header="Track" index="url"></zg-column>
          {{ end }}          
          {{if eq "complete" .Battle.Status}}
          <zg-column cell-class="" header="Votes" index="votes"></zg-column>
          {{ end }}          
          {{if eq "voting" .Battle.Status}}
          <zg-column cell-class="zing-left" sorter="voteSort" header="Vote" index="vote_colour">
            <form class="form-ajax" action="/vote/[[record.id]]" method="post">
              <button type="submit" class="btn-link">
                <span class="material-icons" row-class="dark" style="color: [[index.vote_colour]]">
                done
                </span>
              </button>
            </form>
          </zg-column>
          <zg-column cell-class="zing-feedback" header="Feedback" index="feedback">
          <form class="form-ajax" action="/feedback/[[record.id]]" method="post"><input type="text" name="feedback" maxlength="256" placeholder="Your Feedback (Optional)" value="[[record.feedback]]" class="submit-nobox submit-feedback" /></form>
          </zg-column>
          {{ end }}
          {{if eq "entry" .Battle.Status}}
          <zg-column cell-class="zing-feedback" header="Feedback" index="feedback">
          <form class="form-ajax" action="/feedback/[[record.id]]" method="post"><input type="text" name="feedback" maxlength="256" placeholder="Your Feedback (Optional)" value="[[record.feedback]]" class="submit-nobox" /></form>
          </zg-column>
          {{ end }}
          <zg-column cell-class="zing-right" sorter="loveSort" header="Love" index="like_colour">
            <form class="form-ajax" action="/like/[[record.id]]" method="post">
              <button type="submit" class="btn-link">
                <span class="material-icons" row-class="dark" style="color: [[index.like_colour]]">
                favorite_border
                </span>
              </button>
            </form>
          </zg-column>
        </zg-colgroup>
        <zg-param name="loadByScroll" value="true"></zg-param>
        <zg-nodata>No one has entered this battle yet.</zg-nodata>
      </zing-grid>
    </div>
    {{if .IsOwner}}
    <div id="deleteBattle" class="modal">
      <div class="modal-content">
        <h4 id="modal-header">Delete Battle</h4>
        <p id="modal-description">Are you sure you want to delete this battle?</p>
      </div>
      <div class="modal-footer">
        <form action="/battle/{{.Battle.ID}}/delete" method="post">
          <input type="hidden" name="delete" id="delete" value="yes">
          <ul class="nav-links">
            <li class="nav-item nav-cta"><input type="submit" id="modal-accept" value="ACCEPT"></li>
          </ul>
        </form>
      </div>
    </div>
    <script>$(document).ready(function(){$('.modal').modal();});</script>
    {{end}}
    <script>const darkmode = new Darkmode();</script>
<script>{{if eq "complete" .Battle.Status}}function expandWaveform(){}{{else}}function expandWaveform(){var t=-1;$("iframe").hover(function(){t=$(this)},function(){t=-1}),$(window).blur(function(){-1!=t&&($("iframe").css("width","20px"),t.css("width","100%")),setTimeout(function(){t.blur()},1)})}{{end}}</script>
<script>
window.addEventListener("load", () => {
    const t = document.querySelector("zing-grid");
    t.setData("{{.Beats}}"), t.executeOnLoad(function() {
        setTimeout(function(){onChange()},1)
    }), t.addEventListener("grid:pagechange", t => {
        setTimeout(function(){onChange()},1)
    }), t.addEventListener("grid:refresh", t => {
        setTimeout(function(){onChange()},1)
    }), t.addEventListener("grid:pagesizechange", t => {
        setTimeout(function(){onChange()},1)
    }), t.addEventListener("grid:ready", t => {
        setTimeout(function(){onChange()},1)
    })
});
var _href = $("#edit-button").attr("href");

function onChange() {
  $(".form-ajax").unbind("submit")
  $(".form-ajax").submit(function(t) {
    t.preventDefault();
    var e = $(this).attr("action"),
        o = $(this).attr("method"),
        n = $(this).serialize(),
        r = $(this).find(".material-icons");
    i = $(this).find(".material-icons"), row = $(this).closest("zg-row").attr("aria-rowindex"), col = $(this).closest("zg-cell").attr("aria-colindex"), $.ajax({
        url: e,
        type: o,
        data: n,
        beforeSend: function(t) {
            t.setRequestHeader("X-Requested-With", "xmlhttprequest")
        }
    }).done(function(t) {
        const e = JSON.parse(t);
        e.Redirect ? window.location.replace(e.Redirect) : (M.toast({
            html: e.ToastHTML,
            classes: e.ToastClass,
        }), "liked" == e.ToastQuery && i.attr("style", "color: #ff5800"), "unliked" == e.ToastQuery && i.attr("style", ""), "successvote" == e.ToastQuery && ($(".votes-remaining").html(parseInt($(".votes-remaining").html(), 10) - 1), r.attr("style", "color: #ff5800")), "successdelvote" == e.ToastQuery && ($(".votes-remaining").html(parseInt($(".votes-remaining").html(), 10) + 1), r.attr("style", "")))
    })
  })
  $(".tooltipped").tooltip()
  expandWaveform()
}

function loveSort(t, e) {
    return console.log(t), "#ff5800" == t.like_colour ? -1 : "#ff5800" == e.like_colour ? 1 : t.like_colour > e.like_colour ? 1 : -1
}

function voteSort(t, e) {
    return console.log(t), "#ff5800" == t.vote_colour ? -1 : "#ff5800" == e.vote_colour ? 1 : t.vote_colour > e.vote_colour ? 1 : -1
}
$("#edit-button").attr("href", _href + "timezone/" + Intl.DateTimeFormat().resolvedOptions().timeZone);
</script>
{{ template "Footer" .Toast }}
{{ end }}