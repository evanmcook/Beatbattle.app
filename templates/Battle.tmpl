{{ define "Battle" }}
  {{ template "Header" .Title }}
    {{ template "Menu" .User }}
    <div class="container">
      <div class="battle-information">
        <span class="battle-host">{{.Battle.Host}} | {{if eq "entry" .Battle.Status}}<span style="color: #ff5800">Open</span>{{else if eq "voting" .Battle.Status}}<span style="color: #1E19FF">Voting</span>{{else}}Finished{{end}}</span>
        <nav class="battle-title" style="padding-top: 0;">
          <div class="nav-left">
          <h1>{{.Battle.Title}}</h1>
          <span class="battle-deadline">{{if eq "entry" .Battle.Status}}{{trimPrefix "Open - " .Battle.StatusDisplay}}{{else if eq "voting" .Battle.Status}}{{trimPrefix "Voting - " .Battle.StatusDisplay}}{{else}}{{.Battle.StatusDisplay}}{{end}}</span>
          </div>
          <ul class="nav-links">
            {{if .IsOwner}}
              <li class="nav-item nav-item-right nav-download"><a onclick="return confirm('Are you sure you want to delete your beat battle?')" href="/battle/{{.Battle.ID}}/delete">DELETE</a></li>
              {{if eq "complete" .Battle.Status}}
                <li class="nav-item nav-item-right nav-disabled"><a>CLOSED</a></li>
              {{else}}              
                <li class="nav-item nav-item-right nav-submit"><a id="edit-button" href="/battle/{{.Battle.ID}}/update/">EDIT</a></li>
              {{end}}
            {{else}}
              {{if .Battle.Attachment}}
              <li class="nav-item nav-item-right nav-download"><a href="{{.Battle.Attachment}}">FILES</a></li>
              {{end}}
              {{if eq "entry" .Battle.Status}}
                {{ if .EnteredBattle }}
                <li class="nav-item nav-item-right nav-download"><a href="/battle/{{.Battle.ID}}/feedback">FEEDBACK</a></li>
                <li class="nav-item nav-item-right nav-submit"><a href="/beat/{{.Battle.ID}}/update">UPDATE</a></li>
                {{ else }}
                <li class="nav-item nav-item-right nav-submit"><a href="/beat/{{.Battle.ID}}/submit">SUBMIT</a></li>
                {{ end }}
              {{ else }}
              {{if .EnteredBattle}}<li class="nav-item nav-item-right nav-download"><a href="/battle/{{.Battle.ID}}/feedback">FEEDBACK</a></li>{{ end }}
              <li class="nav-item nav-item-right nav-disabled"><a>CLOSED</a></li>
              {{end}}
            {{end}}
          </ul>
        </nav>
        <h3>Rules</h3>
        {{if .Battle.Tags }}
        <div class="battle-rules">{{.Battle.RulesHTML}}</div>
        <div class="chips battle-chips">{{range .Battle.Tags}}<a href="/battles/{{.Value}}" class="chip">{{.Value}}</a>{{end}}</div>
        {{else}}
        <div style="padding-bottom: 2rem;" class="battle-rules">{{.Battle.RulesHTML}}</div>
        {{end}}
      </div>
      <zing-grid caption='{{ if .EntryPosition }}<span style="color: #ff5800">{{.EntryPosition}}</span>/{{end}}{{.Battle.Entries}} Entries {{if eq "complete" .Battle.Status}}{{else}}| <span class="votes-remaining">{{.VotesRemaining}}</span> Vote{{if eq .VotesRemaining 1}}{{else}}s{{end}} Remaining{{end}}' layout-controls="disabled" sort {{if eq "complete" .Battle.Status}}search{{end}} pager page-size="25" page-size-options="10, 25, 50" layout="row" viewport-stop>
        <zg-colgroup>
          {{if eq "complete" .Battle.Status}}
          <zg-column cell-class="zing-left" header="Artist" index="artist"></zg-column>
          <zg-column cell-class="zing-left" header="Track" index="url"></zg-column>
          {{ else }}
          <zg-column width="85px" cell-class="zing-left" type="row-number" header="Entry #"></zg-column>
          <zg-column cell-class="zing-left" header="Track" index="url">
            [[record.url]]
          </zg-column>
          {{ end }}          
          {{if eq "complete" .Battle.Status}}
          <zg-column cell-class="" header="Votes" index="votes"></zg-column>
          {{ end }}          
          {{if eq "voting" .Battle.Status}}
          <zg-column cell-class="zing-left" header="Vote" index="url">
            <form action="/vote/[[record.id]]" method="post">
              <button type="submit" class="btn-link">
                <zg-icon style="--zg-icon-color: [[record.color]];" name="checkmark">
                  <svg id="svg--9432" slot="icon" viewBox="0 0 24 24">
                    <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"></path>
                  </svg>
                </zg-icon>
              </button>
            </form>
          </zg-column>
          <zg-column cell-class="zing-feedback" header="Feedback" index="feedback">
          <form action="/feedback/[[record.id]]" style="width: 100%;" method="post"><input type="text" name="feedback" maxlength="256" placeholder="Your Feedback (Optional)" value="[[record.feedback]]" class="submit-nobox" /></form>
          </zg-column>
          {{ end }}
          {{if eq "entry" .Battle.Status}}
          <zg-column cell-class="zing-feedback" header="Feedback" index="feedback">
          <form action="/feedback/[[record.id]]" style="width: 100%;"  method="post"><input type="text" name="feedback" maxlength="256" placeholder="Your Feedback (Optional)" value="[[record.feedback]]" class="submit-nobox" /></form>
          </zg-column>
          {{ end }}
        </zg-colgroup>
        <zg-param name="loadByScroll" value="true"></zg-param>
        <zg-nodata>No one has entered this battle yet.</zg-nodata>
      </zing-grid>
    </div>
<script>
function expandWaveform() {
    var overiFrame = -1;
    $('iframe').hover( function() {
        overiFrame = $(this)
    }, function() {
        overiFrame = -1
    });
    $(window).blur( function() {
        if( overiFrame != -1 ) {
            $('iframe').css('width','20px');
            overiFrame.css('width','100%');
        }
        setTimeout(function(){ overiFrame.blur(); }, 1);
    });
}
window.addEventListener("load", () => {
    const t = document.querySelector("zing-grid");
    t.setData("{{.Beats}}"), t.executeOnLoad(function() {
        expandWaveform();
        $("form").submit(function(t) {
            t.preventDefault();
            var e = $(this).attr("action"),
                o = $(this).attr("method"),
                n = $(this).serialize(),
                a = $(this).find("zg-icon");
            $.ajax({
                url: e,
                type: o,
                data: n,
                beforeSend: function(t) {
                    t.setRequestHeader("X-Requested-With", "xmlhttprequest")
                }
            }).done(function(t) {
                const e = JSON.parse(t);
                e.Redirect ? window.location.replace(e.Redirect) : (M.toast({
                    html: e.ToastHTML,
                    classes: e.ToastClass
                }), "successvote" == e.ToastQuery && ($('.votes-remaining').html(parseInt($('.votes-remaining').html(), 10)-1), a.attr("style", "--zg-icon-color: #ff5800")), "successdelvote" == e.ToastQuery && ($('.votes-remaining').html(parseInt($('.votes-remaining').html(), 10)+1), a.attr("style", "--zg-icon-color: black"))), console.log(e)
            })
        }), $(".tooltipped").tooltip()
    }), t.addEventListener("grid:pagechange", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);        
    }), t.addEventListener("grid:refresh", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);     
    }), t.addEventListener("grid:pagesizechange", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);     
    }), t.addEventListener("grid:ready", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);     
    })
});
var _href = $("#edit-button").attr("href");
$("#edit-button").attr("href", _href + "timezone/" + Intl.DateTimeFormat().resolvedOptions().timeZone);
</script>
{{ template "Footer" .Toast }}
{{ end }}