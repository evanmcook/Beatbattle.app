<script>
function expandWaveform() {
    var overiFrame = -1;
    $('iframe').hover( function() {
        overiFrame = $(this)
    }, function() {
        overiFrame = -1
    });
    $(window).blur( function() {
        if( overiFrame != -1 ) {
            $('iframe').css('width','20px');
            overiFrame.css('width','100%');
        }
        setTimeout(function(){ overiFrame.blur(); }, 1);
    });
}
window.addEventListener("load", () => {
    const t = document.querySelector("zing-grid");
    t.setData("{{.Beats}}"), t.executeOnLoad(function() {
        expandWaveform();
        $("form").submit(function(t) {
            t.preventDefault();
            var e = $(this).attr("action"),
                o = $(this).attr("method"),
                n = $(this).serialize(),
                a = $(this).find("zg-icon");
                i = $(this).find(".material-icons");
                row = $(this).closest("zg-row").attr("aria-rowindex");
                col = $(this).closest("zg-cell").attr("aria-colindex");

            $.ajax({
                url: e,
                type: o,
                data: n,
                beforeSend: function(t) {
                    t.setRequestHeader("X-Requested-With", "xmlhttprequest")
                }
            }).done(function(t) {
                const e = JSON.parse(t);
                e.Redirect ? window.location.replace(e.Redirect) : (M.toast({
                    html: e.ToastHTML,
                    classes: e.ToastClass
                }), "liked" == e.ToastQuery && i.attr("style", "color: #ff5800"), "unliked" == e.ToastQuery && i.attr("style", "color: black"), "successvote" == e.ToastQuery && ($('.votes-remaining').html(parseInt($('.votes-remaining').html(), 10)-1), a.attr("style", "--zg-icon-color: #ff5800")), "successdelvote" == e.ToastQuery && ($('.votes-remaining').html(parseInt($('.votes-remaining').html(), 10)+1), a.attr("style", "--zg-icon-color: black")))
            })
        }), $(".tooltipped").tooltip()
    }), t.addEventListener("grid:pagechange", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);        
    }), t.addEventListener("grid:refresh", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);     
    }), t.addEventListener("grid:pagesizechange", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);     
    }), t.addEventListener("grid:ready", t => {
        expandWaveform();
        setTimeout(function(){ $(".tooltipped").tooltip(); }, 1);     
    })
});
var _href = $("#edit-button").attr("href");
$("#edit-button").attr("href", _href + "timezone/" + Intl.DateTimeFormat().resolvedOptions().timeZone);
function loveSort(a, b) {
  console.log(a)
    if (a.like_colour == '#ff5800') return -1;
    if (b.like_colour == '#ff5800') return 1;
    return a.like_colour > b.like_colour ? 1 : -1;
}
function voteSort(a, b) {
  console.log(a)
    if (a.vote_colour == '#ff5800') return -1;
    if (b.vote_colour == '#ff5800') return 1;
    return a.vote_colour > b.vote_colour ? 1 : -1;
}
</script>